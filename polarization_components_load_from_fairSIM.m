%% Description
% This file is the instruction for how to load directional PSF and the
% polarization components from fairSIM plugin in ImageJ. FairSIM is a
% open-cource plugin from conventional SIM reconstruction. The directional
% PSF and polarization components used in PWR-SIM can be generated by the
% intermediated result of fairSIM.

% The souce code, runnable plugin and the instruction of fairSIM is
% available at:
% https://www.fairsim.org/

%% The key setting in fairSIM:
% The setup of setting system parameters and loading the dataset is the 
% same as regular SIM does.

% During the parameter estimation, please click "setup" button and set the
% "Intermediate results" at "full", and save this result as a tiff file.

% During the reconstruction, please click "setup" button and set the
% "Intermediate results" at "full", and save this result as a tiff file.

clear;
addpath('bfmatlab\');
addpath('functions\');

%% load the "Power Spectra" from fairSIM
spectrum_file = 'dataset\XXX\Power Spectra.tif'; % replace this for the real file

spectrum_data = bfopen(spectrum_file);
apo = double(spectrum_data{1}{21,1});

psf_mask1 = double(fourier_data{1}{7,1})>0;
apo_d1 = apo.*psf_mask1;
psf_d1 = abs(fftshift(fft2(psf_mask1)));
psf_dir(:,:,1) = psf_d1;

psf_mask2 = double(fourier_data{1}{13,1})>0;
apo_d2 = apo.*psf_mask2;
psf_d2 = abs(fftshift(fft2(psf_mask2)));
psf_dir(:,:,2) = psf_d2;

psf_mask3 = double(fourier_data{1}{19,1})>0;
apo_d3 = apo.*psf_mask3;
psf_d3 = abs(fftshift(fft2(psf_mask3)));
psf_dir(:,:,3) = psf_d3;

% crop the PSF according to the image size of real image
% psf_dir = psf_dir((64*15+1):64*17,(64*15+1):64*17,:);

%% load the "Spatial Images" from fairSIM
spatial_file = 'dataset\XXX\Spatial images.tif'; % replace this for the real file
spatial_data = bfopen(spatial_file);
SR(:,:,1) = double(spatial_data{1}{3,1});
SR(:,:,2) = double(spatial_data{1}{6,1});
SR(:,:,3) = double(spatial_data{1}{9,1});

clear polarization_components;
for i = 1: 1: 3
    polarization_components(:,:,i) = abs(fft2(ifft2(SR(:,:,i)).*apo));
end

sim = double(spatial_data{1}{11,1});
% replace with the real save directory, and this file will be loaded in
% PWRSIM_deconvolution_experiment.m as the input
save('dataset\XXXX.mat','psf_dir','polarization_components','apo'); 




